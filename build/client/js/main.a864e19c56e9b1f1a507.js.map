{"version":3,"sources":["webpack:///./client/js/lib/google/index.js?5787","webpack:///./client/js/lib/google/apis.js?b2e8","webpack:///./client/js/lib/google/autocomplete.js?1db0","webpack:///./client/views/main/controllers/UIController/DOM.js","webpack:///./client/views/main/controllers/APIController/index.js","webpack:///./client/views/main/controllers/UIController/index.js","webpack:///./client/views/main/controllers/UIController/Search.js","webpack:///./client/views/main/main.js"],"names":["default","autocomplete","google","maps","places","AutocompleteService","getPredictions","types","text","Promise","resolve","reject","getPlacePredictions","input","data","results","map","name","place","description","id","place_id","cities","bind","addresses"],"mappings":";;;;;;;;;;;;;;;;;;iDAASA,O;;;;;;;;;;;;;;;;ACAT;AACA,IAAMC,eAAe,IAAIC,OAAOC,IAAP,CAAYC,MAAZ,CAAmBC,mBAAvB,EAArB;;QAESJ,Y,GAAAA,Y,EAAgB,sB;;;;;;;;;;;;;ACHzB;;AAEA,SAASK,cAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AACnC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,uBAAaC,mBAAb,CAAiC;AAC/BC,aAAOL,IADwB;AAE/BD,aAAOA;AAFwB,KAAjC,EAGG,UAACO,IAAD,EAAU;AACX,UAAIA,SAAS,IAAb,EAAmB;AACjB,YAAMC,UAAUD,KAAKE,GAAL,CAAS;AAAA,iBAAU;AACjCC,kBAAMC,MAAMC,WADqB;AAEjCC,gBAAIF,MAAMG;AAFuB,WAAV;AAAA,SAAT,CAAhB;AAIAX,gBAAQK,OAAR;AACD,OAND,MAMO;AACLJ;AACD;AACF,KAbD;AAcD,GAfM,CAAP;AAgBD;;kBAEc;AACbW,UAAQhB,eAAeiB,IAAf,CAAoB,IAApB,EAA0B,CAAC,UAAD,CAA1B,CADK;AAEbC,aAAWlB,eAAeiB,IAAf,CAAoB,IAApB,EAA0B,CAAC,SAAD,CAA1B;AAFE,C;;;;;;;;;;;;ACrBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;;AAEA;;AAEA;AACA;AACA,2DAAc,aAAa;AAC3B,aAAa,OAAO;AACpB,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,2DAAc,aAAa;AAC3B,aAAa,OAAO;AACpB;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACtC4B;AACH;;;;;;;;;;;;;;;;;ACDzB;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,4EAA0B;AAChD,kBAAkB,YAAY;AAC9B;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;ACrCA;AAAA;AACA;AACgB;AAChB;AACsC;AAChB;AACtB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,8CAA8C,YAAY;AAC1D,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA","file":"js/main.a864e19c56e9b1f1a507.js","sourcesContent":["export { default as autocomplete } from './autocomplete'; // eslint-disable-line\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/lib/google/index.js","/* global google document */\nconst autocomplete = new google.maps.places.AutocompleteService();\n\nexport { autocomplete }; // eslint-disable-line\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/lib/google/apis.js","import { autocomplete } from './apis';\n\nfunction getPredictions(types, text) {\n  return new Promise((resolve, reject) => {\n    autocomplete.getPlacePredictions({\n      input: text,\n      types: types,\n    }, (data) => {\n      if (data !== null) {\n        const results = data.map(place => ({\n          name: place.description,\n          id: place.place_id,\n        }));\n        resolve(results);\n      } else {\n        reject();\n      }\n    });\n  });\n}\n\nexport default {\n  cities: getPredictions.bind(null, ['(cities)']),\n  addresses: getPredictions.bind(null, ['geocode']),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/js/lib/google/autocomplete.js","const DOM = {\n  locationSearch: '.search__input',\n  searchResults: '.results__list',\n  searchResult: '.results__item',\n  progressBar: '.progress',\n  googleMapActivator: '.activator',\n  placeAddBtn: '.place__add',\n  placeName: '.place__name',\n  placeResults: '.place__results',\n  place: '.place__item',\n  placeRating: '.place__rating',\n};\n\nexport default DOM;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/main/controllers/UIController/DOM.js\n// module id = 10\n// module chunks = 1","import $ from 'jquery';\n\nconst API_ENDPOINT = '/locations';\n\nfunction findLocation(name) {\n  return new Promise((resolve, reject) => {\n    $.ajax(`${API_ENDPOINT}`, {\n      data: { name },\n    })\n    .done((res) => {\n      resolve(res);\n    })\n    .fail((xhr) => {\n      const message = JSON.parse(xhr.responseText).message;\n      reject(message);\n    });\n  });\n}\n\nfunction createLocation(name) {\n  return new Promise((resolve, reject) => {\n    $.ajax(`${API_ENDPOINT}`, {\n      data: { name },\n      method: 'POST',\n    })\n    .done((res) => {\n      resolve(res);\n    })\n    .fail((xhr) => {\n      const message = JSON.parse(xhr.responseText).message;\n      reject(message);\n    });\n  });\n}\n\nexport default {\n  findLocation,\n  createLocation,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/main/controllers/APIController/index.js\n// module id = 13\n// module chunks = 1","export { default as Search } from './Search';\nexport { default as DOM } from './DOM';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/main/controllers/UIController/index.js\n// module id = 14\n// module chunks = 1","/* eslint comma-dangle: [\"error\", \"ignore\"] */\nimport $ from 'jquery';\nimport DOM from './DOM';\n\nfunction hideResults() {\n  $(DOM.searchResults).hide();\n}\n\nfunction clearResults() {\n  $(DOM.searchResults).empty();\n}\n\nexport default {\n  hideResults,\n  clearResults,\n  focus() {\n    $(DOM.locationSearch).focus();\n  },\n  displayResults(results) {\n    const $searchResults = $(DOM.searchResults);\n    $searchResults.empty();\n\n    results.forEach((result) => {\n      $searchResults.append(\n        `<li class=\"${DOM.searchResult.slice(1)}\">\n          <span>${result.name}</span>\n        </li>`\n      );\n    });\n\n    $searchResults.show();\n  },\n  clear() {\n    $(DOM.locationSearch).val('');\n    clearResults();\n    hideResults();\n  },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/main/controllers/UIController/Search.js\n// module id = 22\n// module chunks = 1","/* global window google document */\n/* eslint comma-dangle: [\"error\", \"ignore\"] */\nimport 'styles'; // eslint-disable-line\nimport $ from 'jquery';\nimport { autocomplete } from 'google'; // eslint-disable-line\nimport { DOM, Search } from './controllers/UIController';\nimport APIController from './controllers/APIController';\n\nfunction getSearchResults() {\n  const $locationSearch = $(DOM.locationSearch);\n  const search = $locationSearch.val().trim();\n\n  console.log(search);\n\n  if (search === '') {\n    Search.hideResults();\n  } else {\n    Search.clearResults();\n    autocomplete.cities(search)\n      .then(Search.displayResults)\n      .catch(Search.hideResults);\n  }\n}\n\nfunction setupEventListeners() {\n  const $locationSearch = $(DOM.locationSearch);\n\n  $locationSearch.on('keyup', getSearchResults);\n\n  $(document).on('click', DOM.searchResult, (e) => {\n    const $place = $(e.target).parents(DOM.searchResult);\n    const name = $place.text().trim();\n\n    Search.clear();\n\n    APIController.findLocation(name)\n      .then((location) => {\n        if (!location) {\n          return APIController.createLocation(name);\n        }\n        return location;\n      })\n      .then((location) => {\n        console.log(location);\n        window.location.replace(`/locations/${location.id}`);\n      })\n      .catch(err => console.log(err));\n  });\n}\n\nfunction init() {\n  setupEventListeners();\n}\n\n$(init);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/views/main/main.js\n// module id = 23\n// module chunks = 1"],"sourceRoot":""}